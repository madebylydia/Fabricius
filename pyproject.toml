[project]
name = "Fabricius"
version = "0.3.0.dev2"
description = "A Py3K.13 project templating engine with superpowers!"
authors = [
    { name = "Julien Mauroy", email = "pro.julien.mauroy@gmail.com" },
]
dependencies = [
    "chevron>=0.14.0",
    "rich>=13.7.0",
    "inflection>=0.5.1",
    "click>=8.1.7",
    "jinja2>=3.1.3",
    "jinja2-time>=0.2.0",
    "slugify>=0.0.1",
    "platformdirs>=4.2.0",
    "clickloader>=0.2.0",
    "pydantic>=2.6.1",
    "gitpython>=3.1.41",
    "aspreno>=1.0.0.dev2",
]
requires-python = ">=3.12"
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = [
    "cookiecutter",
    "template",
    "project",
    "scaffold",
    "pyscaffold",
]
urls = {"Documentation" = "https://fabricius.readthedocs.org", "Repository" = "https://github.com/madebylydia/Fabricius" }

[project.scripts]
fabricius = "fabricius.cli:main"

[project.license]
text = "MIT"

[tool.pdm.dev-dependencies]
dev = [
    "black>=24.1.1",
    "isort>=5.13.2",
    "pre-commit>=3.6.0",
    "mypy>=1.8.0",
    "tox>=4.12.1",
    "types-chevron>=0.14.2.20240106",
    "esbonio>=0.16.4",
    "pytest>=8.0.0",
    "pytest-pretty>=1.2.0",
    "pytest-html>=4.1.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.2.1",
    "types-pyyaml>=6.0.12.12",
    "pylint>=3.0.3",
    "pylint-pydantic>=0.3.2",
    "tox-gh-actions>=3.2.0",
]

[project.optional-dependencies]
docs = [
    "Sphinx>=7.2.6",
    "sphinx-autobuild>=2024.2.4",
    "pydata-sphinx-theme>=0.15.2",
    "sphinx-design>=0.5.0",
]
sentry = [
    "sentry-sdk>=1.40.1",
]

[tool.pdm]
distribution = true

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = [
    "README.md",
    "LICENSE"
]

[tool.pdm.scripts]
_format_black = "black ."
_format_isort = "isort ./src ./tests ./typings"
_ruff = "ruff ./src/fabricius"
_mypy = "mypy -p fabricius --enable-incomplete-feature=Unpack"
format = { composite = ["_format_black", "_format_isort"], help = "Format the source files (black, isort)" }
test = { cmd = "pytest . --verbose --html=tests/report/index.html --cov-config=.coveragerc --cov-context=test --cov-report=html --cov=src/fabricius", help = "Run tests with pytest." }
lint = { composite = ["_ruff", "_mypy"], help = "Run linters (ruff, mypy)" }
_go_to_docs = {shell = "cd `{pdm} info --where`/docs && pwd"}
_echo = {shell="pwd"}
docs = { composite = ["_go_to_docs", "_echo"] }

# [tool.poe.tasks.docs]
# cmd = "make livehtml"
# cwd = "./docs"

# [tool.poe.tasks.docscov]
# cmd = "make html -b coverage"
# cwd = "./docs"

# Note: I've made an issue regarding this problem:
# https://github.com/pdm-project/pdm/issues/2620
# Hopefully this get shipped in PDM at some point :)

[tool.black]
target-version = [
    "py312",
]
line-length = 99

[tool.isort]
profile = "black"
