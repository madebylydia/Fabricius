from typing import Any, Sequence

from git import Remote
from git.config import GitConfigParser
from git.refs import Head, RemoteReference
from git.repo import Repo
from git.types import PathLike

from .base import Submodule

def sm_section(name: str) -> str: ...
def sm_name(section: str) -> str: ...
def mkhead(repo: Repo, path: PathLike) -> Head: ...
def find_first_remote_branch(remotes: Sequence["Remote"], branch_name: str) -> RemoteReference: ...

class SubmoduleConfigParser(GitConfigParser):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def set_submodule(self, submodule: Submodule) -> None: ...
    def flush_to_index(self) -> None: ...
    def write(self) -> None: ...
